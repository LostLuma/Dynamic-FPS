plugins {
	id("dynamic_fps.module")
    alias libs.plugins.shadow
}

repositories {
	// ModMenu
	exclusiveContent {
		filter { includeGroup("com.terraformersmc") }
		forRepository { maven { url = "https://maven.terraformersmc.com/releases" } }
	}
	maven { url = "https://maven.quiltmc.org/repository/release" }
}

architectury {
    platformSetupLoomIde()
    loader("quilt")
}

loom {
    accessWidenerPath = project(":platforms:common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentQuilt.extendsFrom common
}

dependencies {
    modImplementation(libs.quilt.loader)
	modImplementation(libs.qsl.lifecycle.events)

	modApi(libs.modmenu)

    common(project(path: ":platforms:common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":platforms:common", configuration: "transformProductionQuilt")) { transitive false }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":platforms:common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}
